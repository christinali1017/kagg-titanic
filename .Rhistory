library(lubridate)
library(randomForest)
train <- read.csv("/Users/wish/MyApp/titanic/data/train.csv")
test <-  read.csv("/Users/wish/MyApp/titanic/data/test.csv")
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Embarked, data=train, ntree = 700, importance=True)
Prediction <- predict(fit, test$PassengerId, Survived=Prediction)
submit <- data.frame(test, c)
write.csv(submit, file = "submit_randomforest.csv", row.names = FALSE)
library(lubridate)
library(randomForest)
train <- read.csv("/Users/wish/MyApp/titanic/data/train.csv")
test <-  read.csv("/Users/wish/MyApp/titanic/data/test.csv")
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize +
FamilyID2, data=train, importance=TRUE, ntree=2000)
Prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "firstforest.csv", row.names = FALSE)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, importance=TRUE, ntree=2000)
Prediction <- predict(fit, test)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, importance=TRUE, ntree=2000)
library(lubridate)
library(randomForest)
train <- read.csv("/Users/wish/MyApp/titanic/data/train.csv")
test <-  read.csv("/Users/wish/MyApp/titanic/data/test.csv")
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, importance=TRUE, ntree=2000)
Prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "firstforest.csv", row.names = FALSE)
library(lubridate)
library(randomForest)
train <- read.csv("/Users/wish/MyApp/titanic/data/train.csv")
test <-  read.csv("/Users/wish/MyApp/titanic/data/test.csv")
set.seed(415)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, importance=TRUE, ntree=2000)
Prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "firstforest.csv", row.names = FALSE)
getwd()
setwd("/Users/wish/MyApp/titanic/")
ref_data <- read.csv("./data/train.csv")
test_data <- read.csv("./data/test.csv")
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
# Add 'Survived' category in testing data set, and set to zero
test_data$Survived <- 0
# Add a 'Survived' column in 'test_data' for subsequent rbind
test_data$Survived <- NA
# Create a combined data set
combi_data <- rbind(ref_data,test_data)
combi_data$Name <- as.character(combi_data$Name)
# Split strings contained within the Name column into separate strings into Title and Surname
combi_data$Title <- sapply(combi_data$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combi_data$Surname <- sapply(combi_data$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
# Remove the space before each title
combi_data$Title <- sub(' ', '', combi_data$Title)
# Combine the Mademoiselle and Madame titles
combi_data$Title[combi_data$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
# Combine the Captain, Don, Major, and Sir titles
combi_data$Title[combi_data$Title %in% c('Capt', 'Col', 'Don', 'Major', 'Sir')] <- 'Sir'
# Combine the Dona, Lady, and Jonkheer titles
combi_data$Title[combi_data$Title %in% c('Dona', 'Lady', 'Jonkheer')] <- 'Lady'
# Convert the strings back into factors
combi_data$Title <- factor(combi_data$Title)
# Determining passenger family size
combi_data$FamilySize <- combi_data$SibSp + combi_data$Parch + 1
# Create a variable called FamilyID to associate surnames and family sizes
combi_data$FamilyID <- paste(as.character(combi_data$FamilySize), combi_data$Surname, sep="")
# Try to label familes with two or less people in as small families
combi_data$FamilyID[combi_data$FamilySize <= 2] <- 'Small'
# Create a new data frame containing the FamilyIDs
famIDs <- data.frame(table(combi_data$FamilyID))
# Find those with famIDs with two or less people in them
famIDs <- famIDs[famIDs$Freq <= 2,]
# Correctly label small families and return as a factor
combi_data$FamilyID[combi_data$FamilyID %in% famIDs$Var1] <- 'Small'
combi_data$FamilyID <- factor(combi_data$FamilyID)
# Seperate the data sets back to their original data frames
ref_data <- combi_data[1:891,]
test_data <- combi_data[892:1309,]
# Create a decision tree using rpart
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,
data=ref_data, method="class")
# Plot the decision tree
fancyRpartPlot(fit)
# Create a prediction based on the decision tree
Prediction <- predict(fit, test_data, type = "class")
# Create a submission data frame
submission <- data.frame(PassengerId = test_data$PassengerId, Survived = Prediction)
# Output to CSV file
write.csv(submission, file = "submit.csv",row.names = FALSE)
